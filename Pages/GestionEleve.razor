@page "/eleves"
@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@using BlazorAppServer.Data;
@using Microsoft.EntityFrameworkCore;
@inject NotificationService _notice
@inject AppDbContext  dbContext;


<Layout>
    <Header>
        <Title style="margin-top:10px; color:#ffffff" Level="2">Gestion des élèves</Title>
    </Header>
    <Content>
        <Form style="margin-top:10px" Model="@model"
              OnFinish="OnValidationReussi"
              LabelColSpan="8"
              WrapperColSpan="12">
            <FormItem Label="Matricule">
                <Input @bind-Value="@context.Matricule" />
            </FormItem>
            <FormItem Label="Nom">
                <Input @bind-Value="@context.Nom" />
            </FormItem>
            <FormItem Label="Postnom">
                <Input @bind-Value="context.Postnom" />
            </FormItem>
            <FormItem Label="Lieu de naissance">
                <Input @bind-Value="context.LieuDeNaissance" />
            </FormItem>
            <FormItem Label="Date de naissance">
                <DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" @bind-Value="context.DateDeNaissance" />
            </FormItem>
            <FormItem Label="Sex">
                <RadioGroup @bind-Value="context.Sexe">
                    <Radio Value="0">Masculin</Radio>
                    <Radio Value="1">Feminin</Radio>
                </RadioGroup>
            </FormItem>
            <FormItem  >
                <SimpleSelect @bind-Value="context.ClasseId"  Placeholder="Classe"  >
                    <SelectOptions>
                        @foreach (var classe in classes)
                        {
                            <SimpleSelectOption Value="@classe.Numero" Label="@classe.Nom"></SimpleSelectOption>
                        }
                    </SelectOptions>
                </SimpleSelect>
            </FormItem>

            <FormItem WrapperColOffset="8" WrapperColSpan="16">
                <Button Type="@ButtonType.Primary" HtmlType="submit">
                    Enregistrer
                </Button>
            </FormItem>
        </Form>
    </Content>
    <Footer>
        <Table TItem="Eleve" DataSource="@eleves">
            <Column Title="Matricule" @bind-Field="@context.Matricule" />
            <Column Title="Nom" @bind-Field="@context.Nom" />
            <Column Title="Postnom" @bind-Field="@context.Postnom" />
            <Column Title="Sex" @bind-Field="@context.Sexe" />
            <Column Title="Lieu de naissance" @bind-Field="@context.LieuDeNaissance" />
            <Column Title="Age" Field="context.Age" />
            <ActionColumn Title="Classe">
                @context.Classe?.Nom
            </ActionColumn>
            <ActionColumn Title="Section">
                @context.Classe?.Section?.Nom
            </ActionColumn>
        </Table>
    </Footer>
</Layout>
@code {
    Eleve model = new Eleve();

    List<Classe> classes = new List<Classe>();

    List<Eleve> eleves = new List<Eleve>();

    protected override void OnInitialized()
    {
        classes = dbContext.Classes.Include(x => x.Section).ToList();
        eleves = dbContext.Sections
            .Include(x => x.Classes)
            .ThenInclude(x => x.Eleves)
            .Single(x => x.Code == "Sec001")
            .Classes.SelectMany(x => x.Eleves)
            .ToList();
    }

    private void OnValidationReussi(EditContext editContext)
    {
        dbContext.Eleves.Add(model);
        dbContext.SaveChanges();

        eleves = dbContext.Eleves.ToList();
    }

    private async Task NoticeWithIcon(NotificationType type,string titre,string message)
    {
        await _notice.Open(new NotificationConfig()
        {
            Message = titre,
            Description = message,
            NotificationType = type
        }) ;
    }

    private void OnValidationEchoue(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(model)}");
    }

}
